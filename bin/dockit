#!/bin/sh

help() {

    printf 'dockit - Run a Docker image overlaid on the current directory\n\n'

    printf 'Usage: dockit [options] <image>\n\n'

    printf 'Options:\n'
    printf -- '-h            this help text\n'
    printf -- '-d            detach; run in background, useful for scripting\n'
    printf -- '-n            no mount; just run the image\n'
    printf -- '-i            skip ignores; do not remove files ignored by VCS or Docker\n'
    printf -- '-m <user>     mount directory as <user> instead of default\n'
    printf -- '-r <user>     run shell as <user> instead of default\n'
    printf -- '-o <options>  pass <options> to docker run'

    exit 0

}

while getopts ":hdnim:r:o:" opt
do
    case $opt in
        h)
            help
            ;;
        d)
            detach=true
            ;;
        m)
            mount_as=$OPTARG
            ;;
        n)
            no_mount=1
            ;;
        r)
            run_as=$OPTARG
            ;;
        i)
            ignore_skip=1
            ;;
        o)
            dockopts=$OPTARG
            ;;
        \?)
            printf 'Unrecognized option: -%s\n' "$OPTARG" 1>&2
            exit 1
            ;;
        :)
            printf -- '-%s requires an argument\n' "$OPTARG" 1>&2
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [ $# -eq 0 ]
then
    help
fi

img=$1
docker pull "$img" 1>&2

user=$(docker image inspect "$img" --format "{{.ContainerConfig.User}}")

if [ -z "$mount_as" ]
then
    if [ "$user" ]
    then
        mount_as="$user"
    else
        mount_as="root"
    fi
fi

if [ -z "$run_as" ]
then
    if [ "$user" ]
    then
        run_as=$user
    else
        run_as="root"
    fi
fi

lib="$(cd "$(dirname "$0")/../lib" || exit; pwd)/dockit"

case "$OSTYPE" in
    darwin*)
        lib_src="$(tar -cf - -C "$lib" . | base64)"
        ;;
    *)
        lib_src="$(tar -cf - -C "$lib" . | base64 -w 0)"
        ;;
esac

# shellcheck disable=SC2016
lib_install='printf "$lib_src" | base64 -d | tar -x -C /bin'

export lib_src
export mount_as
export run_as
export ignore_skip

if [ "$no_mount" ]
then

    docker run \
        --rm \
        -ti \
        ${detach:+-d} \
        -e lib_src \
        "$img" \
        /bin/sh -c "$lib_install && /bin/dockit-sh"

else

    cmd='docker run \
    --rm \
    -u 0:0 \
    --privileged \
    -ti \
    -e lib_src \
    -e mount_as \
    -e run_as \
    -e ignore_skip \
    -v /overlay \
    -v "$(pwd)":/host'

    [ "$detach" ] && cmd="$cmd -d"
    [ "$dockopts" ] && cmd="$cmd $dockopts"

    cmd="$cmd \"$img\" /bin/sh -c \"$lib_install && /bin/dockit-init\""

    eval "$cmd"

fi
