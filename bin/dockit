#!/bin/sh

help() {

    echo 'dockit - Mount the current directory into a Docker container'
    echo
    echo 'Usage: dockit [options] <image>'
    echo
    echo 'Options:'
    echo -- '-h         this help text'
    echo -- '-d         detach; run in background, useful for scripting'
    echo -- '-m <user>  mount directory as <user> instead of default'
    echo -- '-r <user>  run shell as <user> instead of default'

    exit 0

}

while getopts ":hdm:r:" opt
do
    case $opt in
        h)
            help
            ;;
        d)
            detach=true
            ;;
        m)
            mount_as=$OPTARG
            ;;
        r)
            run_as=$OPTARG
            ;;
        \?)
            echo "Unrecognized option: -$OPTARG"
            exit 1
            ;;
        :)
            echo -- "-$OPTARG requires an argument" 1>&2
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

if [ $# -eq 0 ]
then
    help
fi

img=$1
docker pull "$img" 1>&2

user=$(docker image inspect "$img" --format "{{.ContainerConfig.User}}")

if [ -z "$mount_as" ]
then
    if [ "$user" ]
    then
        mount_as="$user"
    else
        mount_as="root"
    fi
fi

if [ -z "$run_as" ]
then
    if [ "$user" ]
    then
        run_as=$user
    else
        run_as="root"
    fi
fi

lib="$(cd "$(dirname "$0")/../lib" || exit; pwd)/dockit"
lib_src="$(tar -cf - -C "$lib" . | base64)"

export lib_src
export mount_as
export run_as

docker run \
    --rm \
    -u 0:0 \
    --privileged \
    -ti \
    ${detach:+-d} \
    -e lib_src \
    -e mount_as \
    -e run_as \
    -v /overlay \
    -v "$(pwd)":/host \
    "$img" \
    /bin/sh -c 'echo $lib_src | base64 -d | tar -x -C /bin && /bin/dockit-init'
